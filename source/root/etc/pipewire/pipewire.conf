#daemon config file for PipeWire version "0.3.2"

## set-prop is used to configure properties in the system
#
set-prop library.name.system			support/libspa-support
set-prop context.data-loop.library.name.system	support/libspa-support
set-prop link.max-buffers		64
#set-prop link.max-buffers		16		# version < 3 clients can't handle more
set-prop mem.allow-mlock		true

## Properties for the DSP configuration
#
# there should be 0-15 values where 1=50%, 4=80%, 6=90%, 9=95%, 13=97,5% and 14 & 15 are slow 99,7% & 99,8%
# see https://gitlab.freedesktop.org/pipewire/pipewire/blob/master/spa/plugins/audioconvert/resample-native.h#L32
set-prop default.resample.quality	9
set-prop default.clock.rate		48000
set-prop default.clock.quantum		384
set-prop default.clock.min-quantum	12
set-prop default.clock.max-quantum	6144
set-prop default.video.width		1920
set-prop default.video.height		1080
set-prop default.video.rate.num		60
#set-prop default.video.rate.denom	1

## add-spa-lib <factory-name regex> <library-name>
#
# used to find spa factory names. It maps an spa factory name
# regular expression to a library name that should contain
# that factory.
#
add-spa-lib audio.convert* audioconvert/libspa-audioconvert
add-spa-lib api.alsa.* alsa/libspa-alsa
add-spa-lib api.v4l2.* v4l2/libspa-v4l2
add-spa-lib api.bluez5.* bluez5/libspa-bluez5
add-spa-lib api.vulkan.* vulkan/libspa-vulkan
add-spa-lib api.jack.* jack/libspa-jack
add-spa-lib support.* support/libspa-support
#add-spa-lib videotestsrc videotestsrc/libspa-videotestsrc
#add-spa-lib audiotestsrc audiotestsrc/libspa-audiotestsrc

## load-module [-ifexists] <module-name> [<key>=<value> ...]
#
# Loads a module with the given parameters. Normally failure is
# fatal if the module is not found, unless -ifexists is given.
#
load-module -ifexists libpipewire-module-rtkit rt.prio=45 rt.time.soft=500000 rt.time.hard=900000
load-module -ifexists libpipewire-module-protocol-native
load-module -ifexists libpipewire-module-profiler
load-module -ifexists libpipewire-module-metadata
load-module -ifexists libpipewire-module-spa-device-factory
load-module -ifexists libpipewire-module-spa-node-factory
load-module -ifexists libpipewire-module-client-node
load-module -ifexists libpipewire-module-client-device
load-module -ifexists libpipewire-module-access
load-module -ifexists libpipewire-module-adapter
load-module -ifexists libpipewire-module-link-factory
load-module -ifexists libpipewire-module-session-manager

## create-object [-nofail] <factory-name> [<key>=<value> ...]
#
# Creates an object from a PipeWire factory with the given parameters.
# If -nofail is given, errors are ignored (and no object is created)
#
#create-object spa-node-factory factory.name=videotestsrc node.name=videotestsrc Spa:Pod:Object:Param:Props:patternType=1
#create-object -nofail spa-device-factory factory.name=api.jack.device foo=bar
#create-object spa-device-factory factory.name=api.alsa.enum.udev
#create-object spa-device-factory factory.name=api.alsa.seq.bridge node.name=Internal-MIDI-Bridge
#create-object adapter factory.name=audiotestsrc node.name=my-test
#create-object spa-node-factory factory.name=api.vulkan.compute.source node.name=my-compute-source
create-object -nofail spa-node-factory factory.name=support.node.driver node.name=Dummy priority.master=8000

## exec <program-name>
#
# Execute the given program. This is usually used to start the
# session manager. run the session manager with -h for options
#
exec pipewire-media-session # -d alsa-seq,alsa-pcm,bluez5,metadata
