# make sure that Magic Keys are always enabled
# we can't deal with emergencies without them
kernel.sysrq=1

# https://unix.stackexchange.com/questions/14227/do-i-need-root-admin-permissions-to-run-userspace-perf-tool-perf-events-ar
# https://lwn.net/Articles/696216/
kernel.perf_event_paranoid=0

# make kernel to shit in console less
# https://unix.stackexchange.com/questions/117926/try-to-disable-console-output-console-null-doesnt-work
kernel.printk=3 4 1 3

# already default in HSF kernel
# kernel.io_delay_type=3

# be frugal with RAM allocation
# https://www.kernel.org/doc/Documentation/sysctl/vm.txt
vm.oom_kill_allocating_task=1
vm.overcommit_memory=0
vm.overcommit_ratio=99
# 4G of dynamic hugepages
# vm.nr_overcommit_hugepages=2048

# no core dumps for suid
fs.suid_dumpable=0
# or anyone
kernel.core_pattern=|/bin/false

# use netfilter helpers by default, screw this "security masturbation"
# http://www.firewalld.org/2016/10/automatic-helper-assignment
# https://bbs.archlinux.org/viewtopic.php?pid=1703852#p1703852
net.netfilter.nf_conntrack_helper=1
# and allow x4 more tracked connections with "short" idle time
# http://www.lognormal.com/blog/2012/09/27/linux-tcpip-tuning/
net.netfilter.nf_conntrack_max=1048576
net.netfilter.nf_conntrack_tcp_timeout_established=43200

# also loose reverse path filtering
net.ipv4.conf.default.rp_filter=2
net.ipv4.conf.all.rp_filter=2

# be accepting of auto-configuration !
net.ipv4.conf.default.accept_local=1
net.ipv4.conf.default.arp_accept=1
net.ipv4.conf.default.arp_announce=2
net.ipv4.conf.default.arp_filter=1
net.ipv4.conf.default.arp_notify=1
net.ipv4.neigh.default.app_solicit = 16
net.ipv4.neigh.default.mcast_resolicit = 4
net.ipv4.neigh.default.mcast_solicit = 8
net.ipv4.neigh.default.ucast_solicit = 32
net.ipv6.neigh.default.app_solicit = 16
net.ipv6.neigh.default.mcast_resolicit = 4
net.ipv6.neigh.default.mcast_solicit = 8
net.ipv6.neigh.default.ucast_solicit = 32
net.ipv6.conf.default.accept_ra=2
net.ipv6.conf.default.accept_ra_defrtr=1
net.ipv6.conf.default.accept_ra_mtu=1
net.ipv6.conf.default.accept_ra_pinfo=1
net.ipv6.conf.default.accept_ra_rtr_pref=1
net.ipv6.conf.default.accept_redirects=1
net.ipv6.conf.default.autoconf=1
net.ipv6.conf.default.use_optimistic=1
net.ipv6.conf.default.use_tempaddr=2
net.ipv6.conf.default.ndisc_notify=1
net.ipv6.conf.default.optimistic_dad=1
net.ipv6.conf.default.force_tllao=1
# https://lwn.net/Articles/722804/
net.ipv6.conf.default.seg6_enabled=1
net.ipv6.seg6_flowlabel=1
# don't expose MAC in local IPv6 address ?
#net.ipv6.conf.default.addr_gen_mode=3

# enable MTU discovery since many network operators (especially, mobile ones) have problems with MTU or try to deliberately mess it up
net.ipv4.tcp_mtu_probing=2
net.ipv4.route.min_pmtu=68
net.ipv4.route.mtu_expires=3600
net.ipv6.route.mtu_expires=3600
net.ipv6.conf.default.mtu=1480
# on modern powerfull systems smaller low-latency packets are preferable unless throughput is more important
net.ipv4.tcp_min_snd_mss=48
net.ipv4.route.min_adv_mss=48
net.ipv4.tcp_base_mss=256
net.ipv6.route.min_adv_mss=256
# do NOT join smaller packets ?
#net.ipv4.tcp_autocorking=0
net.ipv4.tcp_timestamps=2
net.ipv4.tcp_reordering=2
net.ipv4.tcp_max_reordering=1000
net.ipv4.tcp_tso_win_divisor=25
# explicit congestion control is a must in today's fucked up Internet
net.ipv4.tcp_ecn=1
# allow all in-kernel types (bbr is HSF default, reno is required)
net.ipv4.tcp_allowed_congestion_control=bbr reno cubic scalable highspeed bic cdg dctcp westwood hybla htcp vegas nv veno lp yeah illinois
# not safe
#net.ipv4.tcp_ecn_fallback=0
#net.ipv4.ip_nonlocal_bind=1
#net.ipv6.ip_nonlocal_bind=1
net.ipv4.ip_dynaddr=2
net.sctp.addip_enable=1
net.sctp.max_burst=32
net.ipv4.tcp_l3mdev_accept=1
net.ipv4.udp_l3mdev_accept=1
# be more generous with memory for networking
# http://www.linux-admins.net/2010/09/linux-tcp-tuning.html
net.ipv4.tcp_tw_reuse=2
# max is 255, default is 64, increasing may induse unnecessary waits on unreachables but decreasing will treat far-away reachables as unreachables
net.ipv6.conf.default.hop_limit=255
net.ipv4.ip_default_ttl=255
net.ipv4.inet_peer_minttl=10
net.ipv4.inet_peer_maxttl=3600
net.ipv4.inet_peer_threshold=262144
net.ipv4.tcp_invalid_ratelimit=100
net.ipv4.icmp_ratelimit=50
net.ipv6.icmp.ratelimit=10
net.ipv4.icmp_msgs_per_sec=20000
net.ipv4.tcp_min_rtt_wlen=60
# disabling this will result in burst-like transmission
net.ipv4.tcp_slow_start_after_idle=0
# may be faster if heuristics are aften wrong
#net.ipv4.tcp_no_metrics_save=1
# use more randomly-assigned ports in this despicable Double-NAT world
net.ipv4.ip_local_port_range=18000 65535
# default is 15, rfc1122 recommends 8
net.ipv4.tcp_retries2=8
net.ipv4.tcp_synack_retries=2
net.ipv4.tcp_comp_sack_delay_ns=5
net.ipv4.tcp_comp_sack_nr=132
# https://serverfault.com/questions/787624/why-isnt-net-ipv4-tcp-rfc1337-enabled-by-default
net.ipv4.tcp_rfc1337=1
# this should be good for up to 10G
# https://oxnz.github.io/2016/05/03/performance-tuning-networking/
# BUT CloudFare says that even default buffer just increases latency: https://blog.cloudflare.com/the-story-of-one-latency-spike/
net.core.somaxconn=4096
net.core.netdev_max_backlog=16384
net.ipv4.tcp_max_syn_backlog=16384
#net.core.optmem_max=204800
#net.core.rmem_default=524288
#net.core.rmem_max=134217728
#net.core.wmem_default=524288
#net.core.wmem_max=134217728
#net.ipv4.tcp_mem=190551 254070 100663296
#net.ipv4.tcp_rmem=16384 87380 33554432
#net.ipv4.tcp_wmem=16384 65536 33554432
#net.ipv4.udp_mem=381105 508140 100663296
#net.ipv4.udp_rmem_min=16384
#net.ipv4.udp_wmem_min=16384
# should be "at least 256 of medium-sized packets" but better to be max-sized packets
# for Ethernet and WiFi with PPPoE uplink + VLANs it may be common to have packets fit into frames of 1280-1480 bytes
# but both IPv4 and IPv6 support pakets up to 64KB and IPv6 may go even up to 4GB
# so 384000 is the best safe value and 16777216 is the paranoic overkill
net.ipv4.neigh.default.unres_qlen_bytes=16777216
net.ipv6.neigh.default.unres_qlen_bytes=16777216
net.ipv4.neigh.default.gc_thresh1=256
net.ipv6.neigh.default.gc_thresh1=256
net.ipv4.neigh.default.gc_thresh2=4096
net.ipv6.neigh.default.gc_thresh2=4096
net.ipv4.neigh.default.gc_thresh3=16384
net.ipv6.neigh.default.gc_thresh3=16384
net.ipv4.route.gc_min_interval_ms=1000
net.ipv6.route.gc_min_interval_ms=1000
net.ipv4.fib_multipath_hash_policy=1
net.ipv6.fib_multipath_hash_policy=1
net.ipv4.fib_multipath_use_neigh=1
net.ipv4.fib_sync_mem=2097152
net.ipv4.tcp_rx_skb_cache=1
net.ipv4.tcp_tx_skb_cache=1
net.ipv4.tcp_thin_linear_timeouts=1
# and some more generous file limits too
fs.file-max=10000000
fs.inotify.max_user_watches=524288
#fs.file-nr=197600 1000 3624009
net.unix.max_dgram_qlen=8192
