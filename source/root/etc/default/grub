# Modified by YaST2. Last modification on Вс мар 13 12:23:21 YEKT 2016
# THIS FILE WILL BE PARTIALLY OVERWRITTEN by perl-Bootloader
# For the new kernel it try to figure out old parameters. In case we are not able to recognize it (e.g. change of flavor or strange install order ) it it use as fallback installation parameters from /etc/sysconfig/bootloader

# If you change this file, run 'grub2-mkconfig -o /boot/grub2/grub.cfg' afterwards to update
# /boot/grub2/grub.cfg.
# Uncomment to set your own custom distributor. If you leave it unset or empty, the default
# policy is to determine the value from /etc/os-release
#GRUB_DISTRIBUTOR=""
#GRUB_DEFAULT=0
#GRUB_HIDDEN_TIMEOUT=0
#GRUB_HIDDEN_TIMEOUT_QUIET=true
#GRUB_TIMEOUT=6
# "gbpages" so memory mapping would start with maximum granularity to break them into hugepages instead of collecting scattered 4k ones
# 'notsc' or 'tsc=unstable' to avoid unreliable clock ? but thit will force HPET which may cause increased latencies
# 'pci=big_root_window" may be benefitial for AMD CPUs & GPUs when your firmware doesn't do its job which is almost always: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=f32ab7547161b9fa7ebfbc4f18ea1eb3fd49fe25 and https://patchwork.kernel.org/patch/10151641/
# 'pcie_ports=native' may allow advanced PCIe function to work in spite of dumb BIOSes
# combine it with 'add_efi_memmap' for extra lazy and unmaintained firmwares: https://unix.stackexchange.com/questions/150090/when-do-i-need-to-specify-add-efi-memmap-as-kernel-argument-in-uefi-efi-boot
# 'pti=off l1tf=off spectre_v2=off spec_store_bypass_disable=off nospectre_v1 nospec_store_bypass_disable nospectre_v2 nopti spectre_v2_user=off noibrs noibpb' to disable spectre hacks
# bypass Intel PCIe port hang stupidity with 'intremap=off / nosid'
# bypass AMD's EFI display handoff bug that keep it switched off by 'amdgpu.dc=0'
GRUB_CMDLINE_LINUX_DEFAULT="showopts apparmor=0 reboot=cold"
# example of XFS options to enable all desktop-related functions if dracut and grub don't cooperate in setting those automatically
#GRUB_CMDLINE_LINUX="rootflags=defaults,lazytime,uqnoenforce,gqnoenforce,pqnoenforce,filestreams,largeio,logbsize=256k,swalloc"
GRUB_CMDLINE_LINUX_RECOVERY="showopts plymouth.enable=0 apm=off noresume edd=off powersaved=off nohz=off highres=off processor.max_cstate=1 vga=normal nomodeset x11failsafe usbcore.autosuspend=-1 floppy.allowed_drive_mask=0 pcie_aspm=off pci=nomsi,nommconf mce=recovery,tolerancelevel=3 iomem=relaxed iommu=pt acpi_enforce_resources=lax irqfixup intremap=nosid"
# DON'T screw up rootfs mount parameters!
SUSE_REMOVE_LINUX_ROOT_PARAM=false
# Uncomment to automatically save last booted menu entry in GRUB2 environment
# variable `saved_entry'
#GRUB_SAVEDEFAULT=true
# Uncomment to enable BadRAM filtering, modify to suit your needs
# This works with Linux (no patch required) and with any kernel that obtains
# the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)
#GRUB_BADRAM=0x01234567,0xfefefefe,0x89abcdef,0xefefefef
# Uncomment to disable graphical terminal (grub-pc only)
GRUB_TERMINAL=gfxterm
# The resolution used on graphical terminal
# note that you can use only modes which your graphic card supports via VBE
# you can see them in real GRUB with the command `vbeinfo'
GRUB_GFXMODE=1280x1024
#GRUB_GFXMODE=1920x1080x24
# goodness for U/EFI
#GRUB_GFXPAYLOAD=1920x1080
GRUB_GFXPAYLOAD_LINUX=keep
# Uncomment if you don't want GRUB to pass "root=UUID=xxx" parameter to Linux
#GRUB_DISABLE_LINUX_UUID=true
# Uncomment to disable generation of recovery mode menu entries
#GRUB_DISABLE_LINUX_RECOVERY=true
# Uncomment to get a beep at grub start
#GRUB_INIT_TUNE="480 440 1"
GRUB_THEME=/boot/grub2/themes/openSUSE/theme.txt
#GRUB_DISABLE_RECOVERY=true
GRUB_DISABLE_OS_PROBER=false
#SUSE_BTRFS_SNAPSHOT_BOOTING=true
GRUB_ENABLE_CRYPTODISK=y
#GRUB_BACKGROUND=/boot/grub2/themes/openSUSE/background.png
GRUB_CMDLINE_LINUX_DEFAULT="${GRUB_CMDLINE_LINUX_DEFAULT:+$GRUB_CMDLINE_LINUX_DEFAULT }${LINUX_ROOT_DEVICE} \$tuned_params"
GRUB_INITRD_OVERLAY="${GRUB_INITRD_OVERLAY:+$GRUB_INITRD_OVERLAY }\$tuned_initrd"
