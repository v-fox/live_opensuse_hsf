// Sample pdnsd configuration file. Must be customized to obtain a working pdnsd setup!
// Read the pdnsd.conf(5) manpage for an explanation of the options.
// Add or remove '#' in front of options you want to disable or enable, respectively.
// Remove '/*' and '*/' to enable complete sections.

global {
#	perm_cache=1024;
	cache_dir="/var/cache/pdnsd";
#	pid_file = /var/run/pdnsd.pid;
	run_as="pdns";
	server_ip = 127.0.0.1;  # Use eth0 here if you want to allow other
				# machines on your network to query pdnsd.
#	daemon=on;
	status_ctl = on;
	ctl_perms=0660;
	paranoid=on;       # This option reduces the chance of cache poisoning
	                   # but may make pdnsd less efficient, unfortunately.
	query_method=udp_tcp;
	min_ttl=15m;       # Retain cached entries at least 15 minutes.
	max_ttl=1w;        # One week.
	timeout=10;        # Global timeout option (10 seconds).
	randomize_recs=on;
	neg_domain_pol=on;
	use_nss=off;
	udpbufsize=1480;   # Upper limit on the size of UDP messages.
}

server {
    label = "dnscrypt-proxy-1";
    ip = 127.0.0.1;
    port = 40;
    uptest=ping;
    timeout = 2;
    edns_query=yes;
    proxy_only = on;
    reject_policy=fail;
    reject_recursively=on;
}

server {
    label = "dnscrypt-proxy-2";
    ip = 127.0.0.1;
    port = 41;
    uptest=ping;
    timeout = 2;
    edns_query=yes;
    proxy_only = on;
    reject_policy=fail;
    reject_recursively=on;
}

server {
    label = "dnscrypt-proxy-3";
    ip = 127.0.0.1;
    port = 42;
    uptest=ping;
    timeout = 2;
    edns_query=yes;
    proxy_only = on;
    reject_policy=fail;
    reject_recursively=on;
}

server {
    label = "dnscrypt-proxy-4";
    ip = 127.0.0.1;
    port = 43;
    uptest=ping;
    timeout = 2;
    edns_query=yes;
    proxy_only = on;
    reject_policy=fail;
    reject_recursively=on;
}

server {
    label = "dnscrypt-proxy-5";
    ip = 127.0.0.1;
    port = 44;
    uptest=ping;
    timeout = 2;
    edns_query=yes;
    proxy_only = on;
    reject_policy=fail;
    reject_recursively=on;
}

server {
    label = "dnscrypt-proxy-6";
    ip = 127.0.0.1;
    port = 45;
    uptest=ping;
    timeout = 2;
    edns_query=yes;
    proxy_only = on;
    reject_policy=fail;
    reject_recursively=on;
}

# This section is meant for resolving from root servers.
server {
	label = "root-servers";
	root_server = discover; # Query the name servers listed below
				# to obtain a full list of root servers.
	randomize_servers = on; # Give every root server an equal chance
	                        # of being queried.
	ip = 	198.41.0.4,     # This list will be expanded to the full
		192.228.79.201; # list on start up.
	timeout = 5;
	uptest = query;         # Test availability using empty DNS queries.
#	query_test_name = .;    # To be used if remote servers ignore empty queries.
	interval = 30m;         # Test every half hour.
	ping_timeout = 300;     # Test should time out after 30 seconds.
	purge_cache = off;
	edns_query = yes;	# Use EDNS for outgoing queries to allow UDP messages
			   	# larger than 512 bytes. May cause trouble with some
			   	# legacy systems.
	exclude = .localdomain;
	policy = included;
	preset = off;
}

/*
# The servers provided by OpenDNS are fast, but they do not reply with
# NXDOMAIN for non-existant domains, instead they supply you with an
# address of one of their search engines. They also lie about the addresses of 
# of the search engines of google, microsoft and yahoo.
# If you do not like this behaviour the "reject" option may be useful.
server {
	label = "opendns";
	ip = 208.67.222.222, 208.67.220.220;
	reject = 208.69.32.0/24,  # You may need to add additional address ranges
	         208.69.34.0/24,  # here if the addresses of their search engines
	         208.67.219.0/24; # change.
	reject_policy = fail;     # If you do not provide any alternative server
	                          # sections, like the following root-server
	                          # example, "negate" may be more appropriate here.
	timeout = 5;
	uptest = ping;            # Test availability using ICMP echo requests.
        ping_timeout = 100;       # ping test will time out after 10 seconds.
	interval = 15m;           # Test every 15 minutes.
	preset = off;
}
*/

source {
	owner=localhost;
#	serve_aliases=on;
	file="/etc/hosts";
}

/*
include {file="/etc/pdnsd.include";}	# Read additional definitions from /etc/pdnsd.include.
*/

rr {
	name=localhost;
	reverse=on;
	a=127.0.0.1;
	owner=localhost;
	soa=localhost,root.localhost,42,86400,900,86400,86400;
}

