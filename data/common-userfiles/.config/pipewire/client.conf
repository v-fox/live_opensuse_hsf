# Client config file for PipeWire version "0.3.23" #
context.properties = {
    ## Configure properties in the system.
    mem.warn-mlock  = true
    mem.allow-mlock = true
    mem.mlock-all   = true
    log.level        = 0
    
    ## Properties for the DSP configuration.
    default.clock.rate        = 192000
    default.clock.quantum     = 2304
    default.clock.min-quantum = 1024
    default.clock.max-quantum = 24576
}

context.spa-libs = {
    #<factory-name regex> = <library-name>
    #
    # Used to find spa factory names. It maps an spa factory name
    # regular expression to a library name that should contain
    # that factory.
    #
    audio.convert.* = audioconvert/libspa-audioconvert
    support.*       = support/libspa-support
}

context.modules = [
    #{   name = <module-name>
    #    [ args = { <key> = <value> ... } ]
    #    [ flags = [ [ ifexists ] [ nofail ] ]
    #}
    #
    # Loads a module with the given parameters.
    # If ifexists is given, the module is ignored when it is not found.
    # If nofail is given, module initialization failures are ignored.
    #
    # Uses RTKit to boost the data thread priority.
    #libpipewire-module-rtkit  = {
    #    args = {
    #        nice.level = -9
    #        rt.prio = 20
    #        rt.time.soft = 900000
    #        rt.time.hard = 1900000
    #    }
    #    flags = [ ifexists nofail ]
    #}

    # The native communication protocol.
    {   name = libpipewire-module-protocol-native }

    # Allows creating nodes that run in the context of the
    # client. Is used by all clients that want to provide
    # data to PipeWire.
    {   name = libpipewire-module-client-node }

    # Allows creating devices that run in the context of the
    # client. Is used by the session manager.
    {   name = libpipewire-module-client-device }

    # Makes a factory for wrapping nodes in an adapter with a
    # converter and resampler.
    {   name = libpipewire-module-adapter }

    # Allows applications to create metadata objects. It creates
    # a factory for Metadata objects.
    {   name = libpipewire-module-metadata }

    # Provides factories to make session manager objects.
    {   name = libpipewire-module-session-manager }
]

filter.properties = {
    #node.latency = 3072/192000
    node.max-latency = 24576/192000
}

stream.properties = {
    #node.latency = 3072/192000
    node.max-latency = 24576/192000
    resample.quality = 9
    channelmix.normalize = true
    channelmix.mix-lfe = true
    channelmix.upmix = false
    #channelmix.lfe-cutoff = 115
}
