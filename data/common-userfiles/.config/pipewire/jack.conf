# JACK client config file for PipeWire version "0.3.23" #

context.properties = {
    ## Configure properties in the system.
    mem.warn-mlock  = true
    mem.allow-mlock = true
    mem.mlock-all   = true
    log.level        = 0
    
    ## Properties for the DSP configuration.
    default.clock.rate        = 192000
    default.clock.quantum     = 3072
    default.clock.min-quantum = 2304
    default.clock.max-quantum = 9216
}

context.spa-libs = {
    #<factory-name regex> = <library-name>
    #
    # Used to find spa factory names. It maps an spa factory name
    # regular expression to a library name that should contain
    # that factory.
    #
    support.* = support/libspa-support
}

context.modules = [
    #{   name = <module-name>
    #    [ args = { <key> = <value> ... } ]
    #    [ flags = [ [ ifexists ] [ nofail ] ]
    #}
    #
    # Loads a module with the given parameters.
    # If ifexists is given, the module is ignored when it is not found.
    # If nofail is given, module initialization failures are ignored.
    #
    #
    # Uses RTKit to boost the data thread priority.
    {   name = libpipewire-module-rtkit
        args = {
            nice.level = -12
            rt.prio = 35
            rt.time.soft = 900000
            rt.time.hard = 1900000
        }
        flags = [ ifexists nofail ]
    }

    # The native communication protocol.
    {   name = libpipewire-module-protocol-native }

    # Allows creating nodes that run in the context of the
    # client. Is used by all clients that want to provide
    # data to PipeWire.
    {   name = libpipewire-module-client-node }

    # Allows applications to create metadata objects. It creates
    # a factory for Metadata objects.
    {   name = libpipewire-module-metadata }
]

jack.properties = {
    #link.passive = false
    #node.latency = 3072/192000
    node.max-latency = 9216/192000
    jack.merge-monitor  = true
    jack.short-name     = false
    jack.filter-name    = true
}
