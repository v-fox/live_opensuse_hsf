### ALSA => PA/JACK routing
## apps can use
## 1) 'jack' is the thinnest JACK compatibility layer but not all apps can swallow it
## 2) 'pulse' is fat but reliable, double layered method of reaching JACK
## 3) 'aloop' is monstrosity that provides the ugliest compatibility technique
## everything else is intermediates that apps shouldn't touch

# https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture#High_quality_resampling
# "speexrate_medium" is equivalent for PA's "speex-float-5" and "speexrate_best"="speex-float-10"
# ffmpeg's "lavcrate_high" is equivalent for mpv's "audio-resample-filter-size=32"
defaults.pcm.rate_converter "speexrate_medium"

pcm.jack {
    type jack
    hint {
        show on
        description "JACK"
    }
    playback_ports {
        0 "Calf Studio Gear:analyzer In #1"
#         0 system:playback_1
        1 "Calf Studio Gear:analyzer In #2"
#         1 system:playback_2
#        2 system:playback_3
#        3 system:playback_4
#        4 system:playback_5
#        5 system:playback_6
#        6 system:playback_7
#        7 system:playback_8
    }
    capture_ports {
        0 system:capture_1
        1 system:capture_2
    }
}

pcm.!default {
  type pulse
  hint {
    show on
    description "Default ALSA Output (currently PA)" }
}
ctl.!default {
  type pulse
#  card 0
#  fallback "sysdefault"
}

## crutch for stupid apps like Firefox
pcm.!sysdefault {
  type jack
  hint {
    show on
    description "Crutch for stupid apps (JACK enforcement)" }
  playback_ports {
#    0 "Calf Studio Gear:analyzer In #1"
    0 system:playback_1
#    1 "Calf Studio Gear:analyzer In #2"
    1 system:playback_2
  }
  capture_ports {
        0 system:capture_1
        1 system:capture_2
  }
}
ctl.!sysdefault {
  type hw
  card 0
#  fallback "pulse"
}

## snd-aloop crutch for insane applications
## that really want full control over genuine [fake] ALSA device
# playback device
pcm.aloopPlayback {
  type dmix
  ipc_key 219345
  slave.pcm "hw:Loopback,0,0"
}

# capture device
pcm.aloopCapture {
  type dsnoop
  ipc_key 219346
  slave.pcm "hw:Loopback,0,1"
}

# duplex device
pcm.aloopDuplex {
  type asym
  playback.pcm "aloopPlayback"
  capture.pcm "aloopCapture"
}

# requires running $(alsa_in -j alsa_in -dcloop -q 1)
pcm.cloop {
  type dsnoop
  ipc_key 219348
  slave.pcm "hw:Loopback,1,0"
}

# requires running $(alsa_out -j alsa_out -dploop -q 1)
pcm.ploop {
  type plug
  slave.pcm "hw:Loopback,1,1"
}

# requires running $(sudo modprobe snd-aloop)
# usable shim device
pcm.aloop {
  type plug
  slave.pcm "aloopDuplex"
  hint {
    show on
    description "Crutch for insane apps (ass-backwards JACK enforcement)" }
}

# allow native DSD on XMOS DACs
# https://github.com/lintweaker/xmos-native-dsd
audio_output {
  type "alsa"
  name "USB XMOS DAC"
  device "hw:x20"
  # Enable native DSD playback
  dsd_native "yes"
  # Disable DSD-over-PCM conversion
  dsd_usb "no"
  # Select 32-bit DSD_U32_BE output format
  dsd_native_type "2"
}

## ! PROVIDED in /usr/share/alsa/alsa.conf.d !
## additional pulse crutch for completely retarded applications like aegisub
## that can't handle neither ALSA or Pulse directly and can't even dream of JACK.
## also, some apps with hyper-lazy authors may rely on ALSA/PA emulation because
## they didn't code PA support but realised that ALSA is inaccessible now
pcm.pulse {
    type pulse
    hint {
        show on
        description "Crutch for full-retard apps (PulseAudio redirection layer)"
    }
}

ctl.pulse {
    type pulse
}
